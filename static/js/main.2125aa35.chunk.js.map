{"version":3,"sources":["utilities/Storage/Store.ts","utilities/Storage/useStorage.ts","components/Background/Background.tsx","components/Header/TimeDisplay.tsx","components/Header/DateDisplay.tsx","components/Header/Header.tsx","components/StockPrice/StockPrice.tsx","components/Footer/Footer.tsx","components/Background/usePhoto.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Store","set","key","data","localStorage","setItem","JSON","stringify","get","getItem","parse","useStorage","id","initialValue","persistedValue","_useState","useState","_useState2","Object","slicedToArray","value","setValue","useCallback","newValue","DEFAULT_PHOTO","title","url","link","description","location","photographer","source","backgroundContext","createContext","Background","_ref","children","_useStorage","_useStorage2","lastUpate","setLastUpate","_useStorage3","_useStorage4","photo","setPhoto","style","backgroundImage","concat","useEffect","Date","getTime","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","fetch","sent","json","stop","apply","this","arguments","update","react_default","createElement","className","Provider","TimeDisplay","date","toLocaleString","hour","minute","hour12","replace","toLowerCase","DateDisplay","toLocaleDateString","year","month","day","Header","setDate","timeout","setTimeout","clearTimeout","useStockPrice","symbol","cacheTimeout","length","undefined","upatedAt","price","change","changePercent","sign","detail","setDetail","result","toUpperCase","normalize","Math","abs","updatePrice","StockPrice","_useStockPrice","signed","isNegative","Number","normalizedValue","toFixed","Footer","useContext","href","App","Background_Background","Header_Header","Footer_Footer","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2125aa35.chunk.js","sourcesContent":["const Store = {\n  set: (key: string, data: any) => {\n    localStorage.setItem(key, JSON.stringify(data));\n  },\n  get: (key: string) => {\n    const data = localStorage.getItem(key);\n    if (!data) return undefined;\n    return JSON.parse(data);\n  },\n};\nexport default Store;\n","import { useState, useCallback } from 'react';\nimport Store from './Store';\n\nexport default function useStorage<S>(id: string, initialValue: S): [S, (newValue: S) => void] {\n  const persistedValue = Store.get(id);\n  const [value, setValue] = useState<S>(persistedValue || initialValue);\n\n  if (!persistedValue) {\n    Store.set(id, initialValue);\n  }\n\n  const updateValue = useCallback(\n    (newValue: S) => {\n      Store.set(id, newValue);\n      return setValue(newValue);\n    },\n    [setValue, id]\n  );\n\n  return [value, updateValue];\n}\n","import React, { ReactNode, createContext, useEffect } from 'react';\nimport { useStorage } from 'utilities/Storage';\n\nimport './Background.scss';\n\nexport interface Photo {\n  title: string;\n  url: string;\n  link: string;\n  description: {\n    title: string;\n    location: string;\n    photographer: string;\n    source: string;\n  };\n}\n\nconst DEFAULT_PHOTO: Photo = {\n  title: '',\n  url: '',\n  link: '',\n  description: {\n    title: '',\n    location: '',\n    photographer: '',\n    source: '',\n  },\n};\n\nexport interface Props {\n  children?: ReactNode;\n}\n\nexport const backgroundContext = createContext<Photo>(DEFAULT_PHOTO);\n\nexport default function Background({ children }: Props) {\n  const [lastUpate, setLastUpate] = useStorage('lastUpadte', 0);\n  const [photo, setPhoto] = useStorage<Photo>('currentPhoto', DEFAULT_PHOTO);\n\n  const style = {\n    backgroundImage: photo ? `url(${photo.url})` : '',\n  };\n\n  useEffect(() => {\n    if (lastUpate + 3 * 60 * 60 * 1000 > new Date().getTime()) return;\n\n    const update = async () => {\n      const response = await fetch('https://bing-wp.herokuapp.com');\n      const photo = (await response.json()) as Photo;\n      setPhoto(photo);\n      setLastUpate(new Date().getTime());\n    };\n    update();\n  }, [lastUpate, setPhoto, setLastUpate]);\n\n  return (\n    <div className=\"Background\" style={style}>\n      <backgroundContext.Provider value={photo}>{children}</backgroundContext.Provider>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport interface Props {\n  date: Date;\n}\n\nexport default function TimeDisplay({ date }: Props) {\n  return (\n    <div className=\"heading--1\" id=\"time-display\">\n      {date\n        .toLocaleString('en-US', {\n          hour: 'numeric',\n          minute: 'numeric',\n          hour12: true,\n        })\n        .replace(/\\s/, '')\n        .toLowerCase()}\n    </div>\n  );\n}\n","import React from 'react';\n\nexport interface Props {\n  date: Date;\n}\n\nexport default function DateDisplay({ date }: Props) {\n  return (\n    <div className=\"heading--5\" id=\"date-display\">\n      {date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n      })}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport TimeDisplay from './TimeDisplay';\nimport DateDisplay from './DateDisplay';\n\nimport './Header.scss';\n\nexport default function Header() {\n  const [date, setDate] = useState(new Date());\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setDate(new Date());\n    }, 1000);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [date]);\n\n  return (\n    <header className=\"d-flex justify-content-between align-items-center\">\n      <div>\n        <DateDisplay date={date} />\n        <TimeDisplay date={date} />\n      </div>\n    </header>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useStorage } from 'utilities/Storage';\n\nexport interface Props {\n  symbol: string;\n}\n\nconst API_KEY = 'pk_d8e6c3793f0743d3bef721a8b58bab8e';\n\nconst useStockPrice = (symbol: string, cacheTimeout: number = 30000) => {\n  const [detail, setDetail] = useStorage(`stock-${symbol}`, {\n    upatedAt: 0,\n    price: '0',\n    change: '0',\n    changePercent: '0',\n    sign: 0,\n  });\n\n  useEffect(() => {\n    if (detail.upatedAt + cacheTimeout > new Date().getTime()) return;\n\n    const updatePrice = async () => {\n      const response = await fetch(`https://cloud.iexapis.com/stable/stock/${symbol.toUpperCase()}/quote?token=${API_KEY}`);\n      const result = await response.json();\n\n      const price = normalize(result['latestPrice']);\n      const change = normalize(result['change'], true);\n      const changePercent = normalize(Math.abs(100 * result['changePercent']));\n      const sign = result['change'] < 0 ? -1 : result['change'] > 0 ? +1 : 0;\n      \n      setDetail({\n        upatedAt: new Date().getTime(),\n        price,\n        change,\n        changePercent,\n        sign,\n      });\n    };\n\n    updatePrice();\n  }, [detail, setDetail, cacheTimeout, symbol]);\n\n  return detail;\n};\n\nexport default function StockPrice({ symbol }: Props) {\n  const { price, change, changePercent, sign } = useStockPrice(symbol);\n  return (\n    <h5 className=\"heading--5 stock\">\n      <i className={`fas fa-angle-double-${sign < 0 ? 'down' : 'up'}`} />\n      &nbsp;\n      {symbol.toUpperCase()} {price}\n      &nbsp;\n      <small>\n        USD {change} ({changePercent}%){' '}\n      </small>\n    </h5>\n  );\n}\n\nconst normalize = (value: string | number, signed: boolean = false) => {\n  const isNegative = Number(value) < 0;\n  const normalizedValue = Math.abs(Number(value)).toFixed(2);\n  const positive = signed ? '+' : '';\n\n  return `${isNegative ? '−' : positive}${normalizedValue}`;\n};\n","import React from 'react';\nimport { usePhoto } from 'components/Background';\n\nimport './Footer.scss';\nimport { StockPrice } from 'components/StockPrice';\n\nexport default function Footer() {\n  const photo = usePhoto();\n\n  const location = photo.description.location ? (\n    <span id=\"location\">\n      | <i className=\"fas fa-map-marker-alt\" /> {photo.description.location}\n    </span>\n  ) : null;\n\n  const description = photo.description.photographer ? (\n    <span>\n      Photo by <a href={photo.link}>{photo.description.photographer}</a>\n    </span>\n  ) : null;\n\n  const source = photo.description.source ? <span>{photo.description.source}</span> : null;\n\n  return (\n    <footer>\n      <div className=\"d-flex justify-content-between align-items-end\">\n        <div id=\"quote\">\n          <StockPrice symbol=\"SHOP\" />\n        </div>\n        <div id=\"credits\">\n          <h1 className=\"heading--5\">{photo.title}</h1>\n          <p className=\"body-text\" id=\"photographer\">\n            {description}\n            {location}\n          </p>\n          <p className=\"body-text\" id=\"location\" />\n        </div>\n      </div>\n      <div className=\"d-flex justify-content-between align-items-center sep\">\n        <div id=\"refresh-btn\" />\n        <a id=\"burst-link\" href={photo.link}>\n          {photo.description.title} - {source}\n        </a>\n      </div>\n    </footer>\n  );\n}\n","import { useContext } from 'react';\n\nimport { backgroundContext } from './Background';\n\nexport default function usePhoto() {\n  const context = useContext(backgroundContext)!;\n  return context;\n}\n","import React from 'react';\n\nimport { Background } from 'components/Background';\nimport { Header } from 'components/Header';\nimport { Footer } from 'components/Footer';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <Background>\n      <Header />\n      <Footer />\n    </Background>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}