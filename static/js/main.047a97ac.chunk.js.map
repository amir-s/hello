{"version":3,"sources":["utilities/Storage/Store.ts","utilities/Storage/useStorage.ts","components/Background/Background.tsx","components/Header/TimeDisplay.tsx","components/Header/DateDisplay.tsx","components/Header/Header.tsx","components/StockPrice/StockPrice.tsx","components/Footer/Footer.tsx","components/Background/usePhoto.ts","components/Background/useUtils.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Store","set","key","data","localStorage","setItem","JSON","stringify","get","getItem","parse","useStorage","id","initialValue","persistedValue","_useState","useState","_useState2","Object","slicedToArray","value","setValue","useCallback","newValue","DEFAULT_PHOTO","title","url","link","description","location","photographer","source","backgroundContext","createContext","utilsContext","loading","changePhoto","Background","_ref","children","_useStorage","_useStorage2","lastUpate","setLastUpate","_useStorage3","_useStorage4","photo","setPhoto","setLoading","style","backgroundImage","concat","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","to","response","img","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","json","Image","src","onload","setTimeout","stop","apply","this","useEffect","Date","getTime","_ref3","_callee2","_context2","update","react_default","createElement","className","Provider","TimeDisplay","date","toLocaleString","hour","minute","hour12","replace","toLowerCase","DateDisplay","toLocaleDateString","year","month","day","Header","setDate","timeout","clearTimeout","useStockPrice","symbol","cacheTimeout","upatedAt","price","change","changePercentage","sign","currency","state","detail","setDetail","result","objectSpread","t0","updatePrice","StockPrice","_useStockPrice","fetchedSymbol","priceDetail","toUpperCase","Footer","stocks","setStocks","editing","setEditing","_useState3","_useState4","rawStocks","setRawStocks","input","useRef","useContext","_useUtils","save","split","map","item","trim","filter","Boolean","credit","href","shuffleIcon","onClick","ref","type","onChange","e","target","onKeyPress","onBlur","join","current","focus","index","App","Background_Background","Header_Header","Footer_Footer","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.047a97ac.chunk.js","sourcesContent":["const Store = {\n  set: (key: string, data: any) => {\n    localStorage.setItem(key, JSON.stringify(data));\n  },\n  get: (key: string) => {\n    const data = localStorage.getItem(key);\n    if (!data) return undefined;\n    return JSON.parse(data);\n  },\n};\nexport default Store;\n","import { useState, useCallback } from 'react';\nimport Store from './Store';\n\nexport default function useStorage<S>(id: string, initialValue: S): [S, (newValue: S) => void] {\n  const persistedValue = Store.get(id);\n  const [value, setValue] = useState<S>(persistedValue || initialValue);\n\n  if (!persistedValue) {\n    Store.set(id, initialValue);\n  }\n\n  const updateValue = useCallback(\n    (newValue: S) => {\n      Store.set(id, newValue);\n      return setValue(newValue);\n    },\n    [setValue, id]\n  );\n\n  return [value, updateValue];\n}\n","import React, { ReactNode, createContext, useEffect, useState } from 'react';\nimport { useStorage } from 'utilities/Storage';\n\nimport './Background.scss';\n\nexport interface Photo {\n  title: string;\n  url: string;\n  link: string;\n  description: {\n    title: string;\n    location: string;\n    photographer: string;\n    source: string;\n  };\n}\n\nconst DEFAULT_PHOTO: Photo = {\n  title: '',\n  url: '',\n  link: '',\n  description: {\n    title: '',\n    location: '',\n    photographer: '',\n    source: '',\n  },\n};\n\nexport interface Props {\n  children?: ReactNode;\n}\n\ninterface Utils {\n  loading: boolean;\n  changePhoto(to: 'random' | 'daily'): void;\n}\n\nexport const backgroundContext = createContext<Photo>(DEFAULT_PHOTO);\nexport const utilsContext = createContext<Utils>({\n  loading: true,\n  changePhoto: () => {},\n});\n\nexport default function Background({ children }: Props) {\n  const [lastUpate, setLastUpate] = useStorage('lastUpadte', 0);\n  const [photo, setPhoto] = useStorage<Photo>('currentPhoto', DEFAULT_PHOTO);\n  const [loading, setLoading] = useState(false);\n\n  const style = {\n    backgroundImage: photo ? `url(${photo.url})` : '',\n  };\n\n  const changePhoto = async (to: 'random' | 'daily' = 'random') => {\n    setLoading(true);\n\n    const response = await fetch(`https://hello-data.amirs.dev/v1/photo/${to === 'random' ? 'random' : ''}`);\n    const photo = (await response.json()) as Photo;\n    const img = new Image();\n    img.src = photo.url;\n    img.onload = () => {\n      setPhoto(photo);\n      setTimeout(() => {\n        setLoading(false);\n      }, 1000);\n    };\n  };\n\n  useEffect(() => {\n    if (lastUpate + 24 * 60 * 60 * 1000 > new Date().getTime()) return;\n\n    const update = async () => {\n      const response = await fetch('https://hello-data.amirs.dev/v1/photo');\n      const photo = (await response.json()) as Photo;\n      setPhoto(photo);\n      setLastUpate(new Date().getTime());\n    };\n\n    update();\n  }, [lastUpate, setPhoto, setLastUpate]);\n\n  return (\n    <div className=\"Background\" style={style}>\n      <utilsContext.Provider value={{ changePhoto, loading }}>\n        <backgroundContext.Provider value={photo}>{children}</backgroundContext.Provider>\n      </utilsContext.Provider>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport interface Props {\n  date: Date;\n}\n\nexport default function TimeDisplay({ date }: Props) {\n  return (\n    <div className=\"heading--1\" id=\"time-display\">\n      {date\n        .toLocaleString('en-US', {\n          hour: 'numeric',\n          minute: 'numeric',\n          hour12: true,\n        })\n        .replace(/\\s/, '')\n        .toLowerCase()}\n    </div>\n  );\n}\n","import React from 'react';\n\nexport interface Props {\n  date: Date;\n}\n\nexport default function DateDisplay({ date }: Props) {\n  return (\n    <div className=\"heading--5\" id=\"date-display\">\n      {date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n      })}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport TimeDisplay from './TimeDisplay';\nimport DateDisplay from './DateDisplay';\n\nimport './Header.scss';\n\nexport default function Header() {\n  const [date, setDate] = useState(new Date());\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setDate(new Date());\n    }, 1000);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [date]);\n\n  return (\n    <header className=\"d-flex justify-content-between align-items-center\">\n      <div>\n        <DateDisplay date={date} />\n        <TimeDisplay date={date} />\n      </div>\n    </header>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useStorage } from 'utilities/Storage';\n\nexport interface Props {\n  symbol: string;\n}\n\nconst useStockPrice = (symbol: string, cacheTimeout: number = 30000) => {\n  const [detail, setDetail] = useStorage(`stock-${symbol}`, {\n    upatedAt: 0,\n    price: '0',\n    change: '0',\n    changePercentage: '0',\n    sign: 0,\n    currency: '',\n    symbol: '',\n    state: 'loading',\n  });\n\n  useEffect(() => {\n    if (detail.upatedAt + cacheTimeout > new Date().getTime()) return;\n\n    const updatePrice = async () => {\n      try {\n        const response = await fetch(`https://hello-data.amirs.dev/v1/stock/${symbol}`);\n        const result = await response.json();\n\n        const sign = result['change'] < 0 ? -1 : result['change'] > 0 ? +1 : 0;\n\n        setDetail({\n          ...result,\n          upatedAt: new Date().getTime(),\n          sign,\n          state: 'loaded',\n        });\n      } catch (_) {\n        setDetail({\n          ...detail,\n          upatedAt: new Date().getTime(),\n          state: 'error',\n        });\n      }\n    };\n\n    updatePrice();\n  }, [detail, setDetail, cacheTimeout, symbol]);\n\n  return detail;\n};\n\nexport default function StockPrice({ symbol }: Props) {\n  const { state, price, change, changePercentage, sign, currency, symbol: fetchedSymbol } = useStockPrice(symbol);\n\n  const detail =\n    state === 'loaded' ? (\n      <small>\n        {currency || 'USD'} {change} ({changePercentage}%)\n      </small>\n    ) : null;\n\n  const priceDetail =\n    state === 'error' ? (\n      <small>---</small>\n    ) : state === 'loading' ? (\n      <small>\n        <i className=\"fas fa-spinner fa-pulse\" />\n      </small>\n    ) : (\n      price\n    );\n  return (\n    <h5 className=\"heading--5 stock\">\n      <i className={`fas fa-angle-${sign < 0 ? 'down' : 'up'}`} />\n      &nbsp;\n      {(fetchedSymbol || symbol).toUpperCase()} {priceDetail}\n      &nbsp;\n      {detail}\n    </h5>\n  );\n}\n","import React, { useState, useRef } from 'react';\nimport { usePhoto, useUtils } from 'components/Background';\n\nimport './Footer.scss';\nimport { StockPrice } from 'components/StockPrice';\nimport { useStorage } from 'utilities/Storage';\n\nexport default function Footer() {\n  const [stocks, setStocks] = useStorage('stock-list', ['SHOP/nyse']);\n  const [editing, setEditing] = useState(false);\n  const [rawStocks, setRawStocks] = useState('');\n  const input = useRef<any>();\n\n  const photo = usePhoto();\n  const { loading, changePhoto } = useUtils();\n\n  const shuffle = () => {\n    changePhoto(loading ? 'daily' : 'random');\n  };\n\n  const edit = () => {\n    setRawStocks(stocks.join(', '));\n    setEditing(true);\n    setTimeout(() => {\n      if (input && input.current) input.current.focus();\n    }, 5);\n  };\n  const save = () => {\n    setStocks(\n      rawStocks\n        .split(',')\n        .map(item => item.trim().toUpperCase())\n        .filter(Boolean)\n    );\n    setEditing(false);\n  };\n\n  const location = photo.description.location ? (\n    <span id=\"location\">\n      | <i className=\"fas fa-map-marker-alt\" /> {photo.description.location}\n    </span>\n  ) : null;\n\n  const credit = photo.description.photographer ? (\n    <span>\n      Photo by <a href={photo.link}>{photo.description.photographer}</a>\n    </span>\n  ) : null;\n\n  const source = photo.description.source ? <span> via {photo.description.source}</span> : null;\n  const description = photo.title === photo.description.title ? '' : photo.description.title;\n\n  const shuffleIcon = loading ? <i className=\"fas fa-spinner fa-pulse\" /> : <i className=\"fas fa-random\" />;\n  return (\n    <footer>\n      <div className=\"d-flex justify-content-between align-items-end\">\n        <div id=\"stock-list\">\n          {editing && <i className=\"fas fa-save save-stock\" onClick={save} />}\n          {editing && (\n            <input\n              ref={input}\n              className=\"input\"\n              type=\"text\"\n              value={rawStocks}\n              onChange={e => setRawStocks(e.target.value)}\n              onKeyPress={e => {\n                e.key === 'Enter' && save();\n              }}\n              onBlur={save}\n            />\n          )}\n          {!editing && <i className=\"fas fa-edit remove-stock\" onClick={edit} />}\n          {!editing && stocks.map((symbol, index) => <StockPrice key={symbol + index} symbol={symbol} />)}\n        </div>\n        <div id=\"credits\">\n          <h1 className=\"heading--5\">{photo.title}</h1>\n          <p className=\"body-text\" id=\"photographer\">\n            {credit}\n            {location}\n          </p>\n          <p className=\"body-text\" id=\"location\" />\n        </div>\n      </div>\n      <div className=\"d-flex justify-content-between align-items-center sep\">\n        <div id=\"refresh-btn\" className={loading ? 'disabled' : ''} onClick={shuffle}>\n          {shuffleIcon} Shuffle\n        </div>\n        <a id=\"burst-link\" href={photo.link}>\n          {description} {source}\n        </a>\n      </div>\n    </footer>\n  );\n}\n","import { useContext } from 'react';\n\nimport { backgroundContext } from './Background';\n\nexport default function usePhoto() {\n  const context = useContext(backgroundContext)!;\n  return context;\n}\n","import { useContext } from 'react';\n\nimport { utilsContext } from './Background';\n\nexport default function useUtils() {\n  const context = useContext(utilsContext)!;\n  return context;\n}\n","import React from 'react';\n\nimport { Background } from 'components/Background';\nimport { Header } from 'components/Header';\nimport { Footer } from 'components/Footer';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <Background>\n      <Header />\n      <Footer />\n    </Background>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}